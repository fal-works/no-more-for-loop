/**
* A micro-library for reducing manual for-loops.
* GitHub repository: {@link https://github.com/fal-works/no-more-for-loops}
* @module no-more-for-loops
* @author FAL <falworks.contact@gmail.com>
* @license MIT
* @version 0.1.0
*/
function loopArrayLimited(t,r,o){let n=0;for(;n<o;)r(t[n],n,t),n+=1}function loopArray(t,r){loopArrayLimited(t,r,t.length)}function loopArrayBackwardsLimited(t,r,o){for(;o--;)r(t[o],o,t)}function loopArrayBackwards(t,r){loopArrayBackwardsLimited(t,r,t.length)}function roundRobinLimited(t,r,o){for(let n=0,i=o-1;n<i;n+=1)for(let i=n+1;i<o;i+=1)r(t[n],t[i])}function roundRobin(t,r){roundRobinLimited(t,r,t.length)}function nestedLoopJoinLimited(t,r,o,n,i){for(let e=0;e<n;e+=1)for(let n=0;n<i;n+=1)o(t[e],r[n])}function nestedLoopJoin(t,r,o){nestedLoopJoinLimited(t,r,o,t.length,r.length)}class LoopableArray{constructor(t=256){this.array=new Array(t),this.length=0}get(t){return this.array[t]}getLast(){return this.array[this.length-1]}push(t){return this.array[this.length]=t,this.length+=1,this.length}pushRawArray(t,r=t.length){for(let o=0;o<r;o+=1)this.array[this.length+o]=t[o];return this.length+=r,this.length}pushAll(t){return this.pushRawArray(t.array,t.length)}pop(){return this.length-=1,this.array[this.length]}clear(){this.length=0}loop(t){loopArrayLimited(this.array,t,this.length)}loopBackwards(t){loopArrayBackwardsLimited(this.array,t,this.length)}roundRobin(t){roundRobinLimited(this.array,t,this.length)}nestedLoopJoin(t,r){nestedLoopJoinLimited(this.array,t.array,r,this.length,t.length)}}export{loopArray,loopArrayBackwards,roundRobin,nestedLoopJoin,LoopableArray};