/**
* A micro-library for reducing manual for-loops.
* GitHub repository: {@link https://github.com/fal-works/no-more-for-loops}
* @module no-more-for-loops
* @author FAL <falworks.contact@gmail.com>
* @license MIT
* @version 0.1.0
*/
!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(t.NoMoreForLoops={})}(this,function(t){"use strict";function r(t,r,e){let n=0;for(;n<e;)r(t[n],n,t),n+=1}function e(t,r,e){for(;e--;)r(t[e],e,t)}function n(t,r,e){for(let n=0,o=e-1;n<o;n+=1)for(let o=n+1;o<e;o+=1)r(t[n],t[o])}function o(t,r,e,n,o){for(let h=0;h<n;h+=1)for(let n=0;n<o;n+=1)e(t[h],r[n])}t.loopArray=function(t,e){r(t,e,t.length)},t.loopArrayBackwards=function(t,r){e(t,r,t.length)},t.roundRobin=function(t,r){n(t,r,t.length)},t.nestedLoopJoin=function(t,r,e){o(t,r,e,t.length,r.length)},t.LoopableArray=class{constructor(t=256){this.array=new Array(t),this.length=0}get(t){return this.array[t]}getLast(){return this.array[this.length-1]}push(t){return this.array[this.length]=t,this.length+=1,this.length}pushRawArray(t,r=t.length){for(let e=0;e<r;e+=1)this.array[this.length+e]=t[e];return this.length+=r,this.length}pushAll(t){return this.pushRawArray(t.array,t.length)}pop(){return this.length-=1,this.array[this.length]}clear(){this.length=0}loop(t){r(this.array,t,this.length)}loopBackwards(t){e(this.array,t,this.length)}roundRobin(t){n(this.array,t,this.length)}nestedLoopJoin(t,r){o(this.array,t.array,r,this.length,t.length)}},Object.defineProperty(t,"__esModule",{value:!0})});